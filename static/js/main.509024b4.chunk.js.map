{"version":3,"sources":["DatingFilter.js","App.js","reportWebVitals.js","index.js"],"names":["DatingFilter","filters","setFilters","useState","heightRange","weightRange","genders","ageRange","minIncome","education","ethnicities","result","setResult","prScore","setPrScore","handleChange","name","value","prev","handleCheckboxChange","checked","filter","item","_jsxs","Card","style","maxWidth","margin","padding","children","_jsx","CardHeader","title","CardContent","Typography","gutterBottom","TextField","label","type","onChange","e","parseInt","target","variant","FormGroup","map","gender","FormControlLabel","control","Checkbox","includes","select","fullWidth","MenuItem","ethnicity","CardActions","Button","color","onClick","calculateProbability","probability","Math","min","genderProb","reduce","acc","max","log","ethnicityProb","toFixed","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0RAkPeA,MA/OMA,KACnB,MAAOC,EAASC,GAAcC,mBAAS,CACrCC,YAAa,CAAC,IAAK,KACnBC,YAAa,CAAC,GAAI,IAClBC,QAAS,GACTC,SAAU,CAAC,GAAI,IACfC,UAAW,IACXC,UAAW,GACXC,YAAa,MAERC,EAAQC,GAAaT,mBAAS,OAC9BU,EAASC,GAAcX,mBAAS,MAEjCY,EAAeA,CAACC,EAAMC,KAC1Bf,GAAWgB,IAAI,IAAUA,EAAM,CAACF,GAAOC,KAAS,EAG5CE,EAAuBA,CAACH,EAAMC,EAAOG,KACzClB,GAAWgB,IAAI,IACVA,EACH,CAACF,GAAOI,EACJ,IAAIF,EAAKF,GAAOC,GAChBC,EAAKF,GAAMK,QAAOC,GAAQA,IAASL,OACtC,EA2DL,OACEM,eAACC,IAAI,CAACC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,OAAQC,QAAS,QAASC,SAAA,CAC9DC,cAACC,IAAU,CAACC,MAAM,+CAClBT,eAACU,IAAW,CAAAJ,SAAA,CACVN,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,kCACzBC,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQG,YAAY,GAC3BmC,SAAWC,GAAMzB,EAAa,cAAe,CAAC0B,SAASD,EAAEE,OAAOzB,MAAO,IAAKhB,EAAQG,YAAY,KAChGuC,QAAQ,WACRhB,OAAO,WAETG,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQG,YAAY,GAC3BmC,SAAWC,GAAMzB,EAAa,cAAe,CAACd,EAAQG,YAAY,GAAIqC,SAASD,EAAEE,OAAOzB,MAAO,MAC/F0B,QAAQ,WACRhB,OAAO,cAGXJ,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,kCACzBC,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQI,YAAY,GAC3BkC,SAAWC,GAAMzB,EAAa,cAAe,CAAC0B,SAASD,EAAEE,OAAOzB,MAAO,IAAKhB,EAAQI,YAAY,KAChGsC,QAAQ,WACRhB,OAAO,WAETG,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQI,YAAY,GAC3BkC,SAAWC,GAAMzB,EAAa,cAAe,CAACd,EAAQI,YAAY,GAAIoC,SAASD,EAAEE,OAAOzB,MAAO,MAC/F0B,QAAQ,WACRhB,OAAO,cAGXJ,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,gDACzBC,cAACc,IAAS,CAAAf,SACP,CAAC,OAAQ,SAAU,mBAAoB,sBAAsBgB,KAAKC,GACjEhB,cAACiB,IAAgB,CACfC,QACElB,cAACmB,IAAQ,CACP7B,QAASnB,EAAQK,QAAQ4C,SAASJ,GAClCP,SAAWC,GAAMrB,EAAqB,UAAW2B,EAAQN,EAAEE,OAAOtB,SAClEJ,KAAM8B,IAGVT,MAAkB,SAAXS,EAAoB,eAAkB,WAAXA,EAAsB,eAAkB,qBAAXA,EAAgC,iCAAU,kCACpGA,UAKbvB,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,6BACzBC,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQM,SAAS,GACxBgC,SAAWC,GAAMzB,EAAa,WAAY,CAAC0B,SAASD,EAAEE,OAAOzB,MAAO,IAAKhB,EAAQM,SAAS,KAC1FoC,QAAQ,WACRhB,OAAO,WAETG,cAACM,IAAS,CACRC,MAAM,2BACNC,KAAK,SACLrB,MAAOhB,EAAQM,SAAS,GACxBgC,SAAWC,GAAMzB,EAAa,WAAY,CAACd,EAAQM,SAAS,GAAIkC,SAASD,EAAEE,OAAOzB,MAAO,MACzF0B,QAAQ,WACRhB,OAAO,cAGXJ,eAAA,OAAAM,SAAA,CACEN,eAACW,IAAU,CAACC,cAAY,EAAAN,SAAA,CAAC,mDAAc5B,EAAQO,aAC/CsB,cAACM,IAAS,CACRC,MAAM,iCACNC,KAAK,SACLrB,MAAOhB,EAAQO,UACf+B,SAAWC,GAAMzB,EAAa,YAAa0B,SAASD,EAAEE,OAAOzB,MAAO,KACpE0B,QAAQ,WACRhB,OAAO,cAGXJ,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,0CACzBN,eAACa,IAAS,CACRe,QAAM,EACNlC,MAAOhB,EAAQQ,UACf8B,SAAWC,GAAMzB,EAAa,YAAayB,EAAEE,OAAOzB,OACpDmC,WAAS,EACTT,QAAQ,WACRhB,OAAO,SAAQE,SAAA,CAEfC,cAACuB,IAAQ,CAACpC,MAAM,GAAEY,SAAC,yCACnBC,cAACuB,IAAQ,CAACpC,MAAM,aAAYY,SAAC,mCAC7BC,cAACuB,IAAQ,CAACpC,MAAM,aAAYY,SAAC,mCAC7BC,cAACuB,IAAQ,CAACpC,MAAM,eAAcY,SAAC,+CAGnCN,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,gDACzBC,cAACc,IAAS,CAAAf,SACP,CAAC,aAAc,cAAe,kBAAmB,gBAAiB,QAAS,QAAS,WAAY,kBAAkBgB,KAAKS,GACtHxB,cAACiB,IAAgB,CACfC,QACElB,cAACmB,IAAQ,CACP7B,QAASnB,EAAQS,YAAYwC,SAASI,GACtCf,SAAWC,GAAMrB,EAAqB,cAAemC,EAAWd,EAAEE,OAAOtB,SACzEJ,KAAMsC,IAGVjB,MACgB,eAAdiB,EAA6B,qBACf,gBAAdA,EAA8B,qBAChB,oBAAdA,EAAkC,2BACpB,kBAAdA,EAAgC,qBAClB,UAAdA,EAAwB,eACV,UAAdA,EAAwB,eACV,aAAdA,EAA2B,iCAAU,wCAElCA,aAMnBxB,cAACyB,IAAW,CAAA1B,SACVC,cAAC0B,IAAM,CAACb,QAAQ,YAAYc,MAAM,UAAUC,QA9LjBC,KAC3B,IAAIC,EAAc,EAElB,MAAMxD,EAAcH,EAAQG,YAAY,GAAKH,EAAQG,YAAY,GAEjEwD,GADmBC,KAAKC,IAAI,EAAG1D,EAAc,IAG7C,MAAMC,EAAcJ,EAAQI,YAAY,GAAKJ,EAAQI,YAAY,GAEjEuD,GADmBC,KAAKC,IAAI,EAAGzD,EAAc,IAG7C,MAAM0D,EAAa9D,EAAQK,QAAQ0D,QAAO,CAACC,EAAKnB,IAOvCmB,EANqB,CAC1B,KAAQ,KACR,OAAU,KACV,iBAAoB,KACpB,mBAAsB,MAESnB,IAChC,GACHc,GAAeC,KAAKC,IAAI,EAAGC,GAE3B,MAAMxD,EAAWN,EAAQM,SAAS,GAAKN,EAAQM,SAAS,GAExDqD,GADgBC,KAAKC,IAAI,EAAGvD,EAAW,IAIvCqD,GADmBC,KAAKK,IAAI,EAAG,GAAKL,KAAKM,IAAIlE,EAAQO,WAAaqD,KAAKM,IAAI,OAAWN,KAAKM,IAAI,KAAWN,KAAKM,IAAI,OASnHP,GADgB3D,EAAQQ,UALF,CACpB,WAAc,GACd,WAAc,IACd,aAAgB,KAEgCR,EAAQQ,WAAa,EAGvE,MAAM2D,EAAgBnE,EAAQS,YAAYsD,QAAO,CAACC,EAAKX,IAW9CW,EAVwB,CAC7B,WAAc,IACd,YAAe,IACf,gBAAmB,IACnB,cAAiB,IACjB,MAAS,IACT,MAAS,IACT,SAAY,IACZ,eAAkB,KAEgBX,IACnC,GACHM,GAAeC,KAAKC,IAAI,EAAGM,GAE3BxD,GAAyB,IAAdgD,GAAmBS,QAAQ,IACtCvD,GAA2B,IAAd8C,EAAqB,KAAKS,QAAQ,GAAG,EAyIwBxC,SAAC,+BAEjE,OAAXlB,GACCY,eAACU,IAAW,CAAAJ,SAAA,CACVN,eAACW,IAAU,CAACS,QAAQ,KAAId,SAAA,CAAC,+FAAkBlB,EAAO,OAClDY,eAACW,IAAU,CAACS,QAAQ,KAAId,SAAA,CAAC,iDAAYhB,KACrCiB,cAACI,IAAU,CAAAL,SACRhB,EAAU,GACP,uRACAA,EAAU,GACV,yJACAA,EAAU,GACV,qHACAA,EAAU,GACV,2HACA,8IAIL,ECnOQyD,MARf,WACE,OACExC,cAAA,OAAKyC,UAAU,MAAK1C,SAClBC,cAAC9B,EAAY,KAGnB,ECGewE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECHFS,IAASC,OACPrD,cAACsD,IAAMC,WAAU,CAAAxD,SACfC,cAACwC,EAAG,MAENgB,SAASC,eAAe,SAG1Bf,G","file":"static/js/main.509024b4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Typography, Button, Checkbox, FormControlLabel, FormGroup, TextField, MenuItem } from '@mui/material';\n\nconst DatingFilter = () => {\n  const [filters, setFilters] = useState({\n    heightRange: [160, 180],\n    weightRange: [50, 70],\n    genders: [],\n    ageRange: [25, 35],\n    minIncome: 50000,\n    education: '',\n    ethnicities: [],\n  });\n  const [result, setResult] = useState(null);\n  const [prScore, setPrScore] = useState(null);\n\n  const handleChange = (name, value) => {\n    setFilters(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCheckboxChange = (name, value, checked) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: checked \n        ? [...prev[name], value]\n        : prev[name].filter(item => item !== value)\n    }));\n  };\n\n  const calculateProbability = () => {\n    let probability = 1;\n\n    const heightRange = filters.heightRange[1] - filters.heightRange[0];\n    const heightProb = Math.min(1, heightRange / 60);\n    probability *= heightProb;\n\n    const weightRange = filters.weightRange[1] - filters.weightRange[0];\n    const weightProb = Math.min(1, weightRange / 50);\n    probability *= weightProb;\n\n    const genderProb = filters.genders.reduce((acc, gender) => {\n      const genderProbabilities = {\n        'male': 0.488,\n        'female': 0.488,\n        'transgender_male': 0.012,\n        'transgender_female': 0.012\n      };\n      return acc + genderProbabilities[gender];\n    }, 0);\n    probability *= Math.min(1, genderProb);\n\n    const ageRange = filters.ageRange[1] - filters.ageRange[0];\n    const ageProb = Math.min(1, ageRange / 62);\n    probability *= ageProb;\n\n    const incomeProb = Math.max(0, 1 - (Math.log(filters.minIncome) - Math.log(30000)) / (Math.log(1000000) - Math.log(30000)));\n    probability *= incomeProb;\n\n    const educationProb = {\n      'highschool': 0.6,\n      'university': 0.25,\n      'postgraduate': 0.05\n    };\n    const eduProb = filters.education ? educationProb[filters.education] : 1;\n    probability *= eduProb;\n\n    const ethnicityProb = filters.ethnicities.reduce((acc, ethnicity) => {\n      const ethnicityProbabilities = {\n        'east_asian': 0.21,\n        'south_asian': 0.24,\n        'southeast_asian': 0.08,\n        'central_asian': 0.01,\n        'white': 0.15,\n        'black': 0.15,\n        'hispanic': 0.09,\n        'middle_eastern': 0.07\n      };\n      return acc + ethnicityProbabilities[ethnicity];\n    }, 0);\n    probability *= Math.min(1, ethnicityProb);\n\n    setResult((probability * 100).toFixed(2));\n    setPrScore(((probability * 100) / 100).toFixed(2)); // 简单的 PR 值计算\n  };\n\n  return (\n    <Card style={{ maxWidth: 600, margin: 'auto', padding: '20px' }}>\n      <CardHeader title=\"交往配對篩選器\" />\n      <CardContent>\n        <div>\n          <Typography gutterBottom>身高範圍 (cm)</Typography>\n          <TextField\n            label=\"最小身高\"\n            type=\"number\"\n            value={filters.heightRange[0]}\n            onChange={(e) => handleChange('heightRange', [parseInt(e.target.value, 10), filters.heightRange[1]])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"最大身高\"\n            type=\"number\"\n            value={filters.heightRange[1]}\n            onChange={(e) => handleChange('heightRange', [filters.heightRange[0], parseInt(e.target.value, 10)])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>體重範圍 (kg)</Typography>\n          <TextField\n            label=\"最小體重\"\n            type=\"number\"\n            value={filters.weightRange[0]}\n            onChange={(e) => handleChange('weightRange', [parseInt(e.target.value, 10), filters.weightRange[1]])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"最大體重\"\n            type=\"number\"\n            value={filters.weightRange[1]}\n            onChange={(e) => handleChange('weightRange', [filters.weightRange[0], parseInt(e.target.value, 10)])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>性別（可複選）:</Typography>\n          <FormGroup>\n            {['male', 'female', 'transgender_male', 'transgender_female'].map((gender) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.genders.includes(gender)}\n                    onChange={(e) => handleCheckboxChange('genders', gender, e.target.checked)}\n                    name={gender}\n                  />\n                }\n                label={gender === 'male' ? '男性' : gender === 'female' ? '女性' : gender === 'transgender_male' ? '跨性別男性' : '跨性別女性'}\n                key={gender}\n              />\n            ))}\n          </FormGroup>\n        </div>\n        <div>\n          <Typography gutterBottom>年齡範圍</Typography>\n          <TextField\n            label=\"最小年齡\"\n            type=\"number\"\n            value={filters.ageRange[0]}\n            onChange={(e) => handleChange('ageRange', [parseInt(e.target.value, 10), filters.ageRange[1]])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n          <TextField\n            label=\"最大年齡\"\n            type=\"number\"\n            value={filters.ageRange[1]}\n            onChange={(e) => handleChange('ageRange', [filters.ageRange[0], parseInt(e.target.value, 10)])}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>最低年收入 (美元): ${filters.minIncome}</Typography>\n          <TextField\n            label=\"最低年收入\"\n            type=\"number\"\n            value={filters.minIncome}\n            onChange={(e) => handleChange('minIncome', parseInt(e.target.value, 10))}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>選擇教育程度:</Typography>\n          <TextField\n            select\n            value={filters.education}\n            onChange={(e) => handleChange('education', e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n          >\n            <MenuItem value=\"\">選擇教育程度</MenuItem>\n            <MenuItem value=\"highschool\">高中及以上</MenuItem>\n            <MenuItem value=\"university\">大學及以上</MenuItem>\n            <MenuItem value=\"postgraduate\">研究所及以上</MenuItem>\n          </TextField>\n        </div>\n        <div>\n          <Typography gutterBottom>種族（可複選）:</Typography>\n          <FormGroup>\n            {['east_asian', 'south_asian', 'southeast_asian', 'central_asian', 'white', 'black', 'hispanic', 'middle_eastern'].map((ethnicity) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.ethnicities.includes(ethnicity)}\n                    onChange={(e) => handleCheckboxChange('ethnicities', ethnicity, e.target.checked)}\n                    name={ethnicity}\n                  />\n                }\n                label={\n                  ethnicity === 'east_asian' ? '東亞人' :\n                  ethnicity === 'south_asian' ? '南亞人' :\n                  ethnicity === 'southeast_asian' ? '東南亞人' :\n                  ethnicity === 'central_asian' ? '中亞人' :\n                  ethnicity === 'white' ? '白人' :\n                  ethnicity === 'black' ? '黑人' :\n                  ethnicity === 'hispanic' ? '拉丁美洲裔' : '中東和北非裔'\n                }\n                key={ethnicity}\n              />\n\t\t        ))}\n      </FormGroup>\n    </div>\n  </CardContent>\n  <CardActions>\n    <Button variant=\"contained\" color=\"primary\" onClick={calculateProbability}>計算機率</Button>\n  </CardActions>\n  {result !== null && (\n    <CardContent>\n      <Typography variant=\"h6\">你的理想對象在人口中的比例約為: {result}%</Typography>\n      <Typography variant=\"h6\">你的擇偶條件PR值: {prScore}</Typography>\n      <Typography>\n        {prScore < 20\n          ? \"你的條件非常嚴格，找到完全符合條件的對象可能會很有挑戰性。考慮適當放寬一些要求可能會有幫助。\"\n          : prScore < 40\n          ? \"你的條件相對嚴格，可能需要多花些時間尋找理想對象。\"\n          : prScore < 60\n          ? \"你的條件適中，找到理想對象的難度適中。\"\n          : prScore < 80\n          ? \"你的條件相對寬鬆，有很多潛在的理想對象。\"\n          : \"你的條件非常寬鬆，應該很容易找到合適的對象。\"}\n      </Typography>\n    </CardContent>\n  )}\n</Card>\n);\n};\n\nexport default DatingFilter;","import React from 'react';\nimport DatingFilter from './DatingFilter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DatingFilter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}