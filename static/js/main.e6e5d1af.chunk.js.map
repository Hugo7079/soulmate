{"version":3,"sources":["DatingFilter.js","App.js","reportWebVitals.js","index.js"],"names":["normalCDF","x","mean","stdDev","Math","exp","pow","StyledCard","styled","Card","_ref","theme","maxWidth","margin","padding","spacing","backgroundColor","palette","background","paper","boxShadow","shadows","StyledSlider","Slider","_ref2","color","primary","main","height","width","border","fontSize","fontWeight","top","text","display","mode","DatingFilter","filters","setFilters","useState","heightRange","weightRange","genders","ageRange","minIncome","education","ethnicities","result","setResult","prScore","setPrScore","totalUsers","setTotalUsers","sumProbabilities","setSumProbabilities","sumSquaredProbabilities","setSumSquaredProbabilities","handleChange","name","value","prev","handleCheckboxChange","checked","filter","item","_jsxs","children","_jsx","CardHeader","title","titleTypographyProps","variant","align","CardContent","Grid","container","xs","md","Box","mb","Typography","gutterBottom","onChange","e","newValue","valueLabelDisplay","min","max","FormGroup","row","map","gender","FormControlLabel","control","Checkbox","includes","target","label","TextField","type","parseInt","fullWidth","select","MenuItem","ethnicity","CardActions","style","justifyContent","marginTop","Button","size","onClick","calculateProbability","probability","genderProb","reduce","acc","log","ethnicityProb","newTotalUsers","newSumProbabilities","newSumSquaredProbabilities","variance","sqrt","prValue","toFixed","textAlign","mt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6e5d1af.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Typography, Button, Checkbox, FormControlLabel, FormGroup, TextField, MenuItem, Slider, Box, Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\n// 常態分佈的累積分佈函數 (CDF)\nconst normalCDF = (x, mean, stdDev) => {\n  return (1 - Math.exp(-0.5 * Math.pow((x - mean) / stdDev, 2))) / 2;\n};\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  maxWidth: 800,\n  margin: 'auto',\n  padding: theme.spacing(3),\n  backgroundColor: theme.palette.background.paper,\n  boxShadow: theme.shadows[3],\n}));\n\nconst StyledSlider = styled(Slider)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  '& .MuiSlider-thumb': {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n  },\n  '& .MuiSlider-valueLabel': {\n    fontSize: 12,\n    fontWeight: 'normal',\n    top: -6,\n    backgroundColor: 'unset',\n    color: theme.palette.text.primary,\n    '&:before': {\n      display: 'none',\n    },\n    '& *': {\n      background: 'transparent',\n      color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n    },\n  },\n}));\n\nconst DatingFilter = () => {\n  const [filters, setFilters] = useState({\n    heightRange: [160, 180],\n    weightRange: [50, 70],\n    genders: [],\n    ageRange: [25, 35],\n    minIncome: 50000,\n    education: '',\n    ethnicities: [],\n  });\n  const [result, setResult] = useState(null);\n  const [prScore, setPrScore] = useState(null);\n\n  const [totalUsers, setTotalUsers] = useState(1); // 避免除以零\n  const [sumProbabilities, setSumProbabilities] = useState(0);\n  const [sumSquaredProbabilities, setSumSquaredProbabilities] = useState(0);\n\n  const handleChange = (name, value) => {\n    setFilters(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCheckboxChange = (name, value, checked) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: checked \n        ? [...prev[name], value]\n        : prev[name].filter(item => item !== value)\n    }));\n  };\n\n  const calculateProbability = () => {\n    let probability = 1;\n\n    // 計算身高範圍概率\n    const heightMean = 170;\n    const heightStdDev = 10;\n    const heightProb = normalCDF(filters.heightRange[1], heightMean, heightStdDev) - normalCDF(filters.heightRange[0], heightMean, heightStdDev);\n    probability *= heightProb;\n\n    // 計算體重範圍概率\n    const weightMean = 70;\n    const weightStdDev = 15;\n    const weightProb = normalCDF(filters.weightRange[1], weightMean, weightStdDev) - normalCDF(filters.weightRange[0], weightMean, weightStdDev);\n    probability *= weightProb;\n\n    // 計算性別概率\n    const genderProb = filters.genders.reduce((acc, gender) => {\n      const genderProbabilities = {\n        'male': 0.488,\n        'female': 0.488,\n        'transgender_male': 0.012,\n        'transgender_female': 0.012\n      };\n      return acc + genderProbabilities[gender];\n    }, 0);\n    probability *= Math.min(1, genderProb);\n\n    // 計算年齡範圍概率\n    const ageRange = filters.ageRange[1] - filters.ageRange[0];\n    const ageProb = Math.min(1, ageRange / 62);\n    probability *= ageProb;\n\n    // 計算收入概率\n    const incomeProb = Math.max(0, 1 - (Math.log(filters.minIncome) - Math.log(30000)) / (Math.log(1000000) - Math.log(30000)));\n    probability *= incomeProb;\n\n    // 計算教育程度概率\n    const educationProb = {\n      'highschool': 0.6,\n      'university': 0.25,\n      'postgraduate': 0.05\n    };\n    const eduProb = filters.education ? educationProb[filters.education] : 1;\n    probability *= eduProb;\n\n    // 計算種族概率\n    const ethnicityProb = filters.ethnicities.reduce((acc, ethnicity) => {\n      const ethnicityProbabilities = {\n        'east_asian': 0.21,\n        'south_asian': 0.24,\n        'southeast_asian': 0.08,\n        'central_asian': 0.01,\n        'white': 0.15,\n        'black': 0.15,\n        'hispanic': 0.09,\n        'middle_eastern': 0.07\n      };\n      return acc + ethnicityProbabilities[ethnicity];\n    }, 0);\n    probability *= Math.min(1, ethnicityProb);\n\n    // 更新統計數據\n    const newTotalUsers = totalUsers + 1;\n    const newSumProbabilities = sumProbabilities + probability;\n    const newSumSquaredProbabilities = sumSquaredProbabilities + probability * probability;\n\n    setTotalUsers(newTotalUsers);\n    setSumProbabilities(newSumProbabilities);\n    setSumSquaredProbabilities(newSumSquaredProbabilities);\n\n    // 計算平均值和標準差\n    const mean = newSumProbabilities / newTotalUsers;\n    const variance = Math.max(0, (newSumSquaredProbabilities / newTotalUsers) - (mean * mean));\n    const stdDev = Math.sqrt(variance);\n\n    // 計算PR值，確保不會出現負數\n    const prValue = Math.max(0, Math.min(100, ((probability - mean) / (stdDev || 1)) * 50 + 50));\n    setResult((probability * 100).toFixed(2));\n    setPrScore(prValue.toFixed(2));\n  };\n\n  return (\n    <StyledCard>\n      <CardHeader title=\"交往配對篩選器\" titleTypographyProps={{variant: 'h4', align: 'center'}} />\n      <CardContent>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Box mb={2}>\n              <Typography gutterBottom>身高範圍 (cm)</Typography>\n              <StyledSlider\n                value={filters.heightRange}\n                onChange={(e, newValue) => handleChange('heightRange', newValue)}\n                valueLabelDisplay=\"auto\"\n                min={140}\n                max={200}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box mb={2}>\n              <Typography gutterBottom>體重範圍 (kg)</Typography>\n              <StyledSlider\n                value={filters.weightRange}\n                onChange={(e, newValue) => handleChange('weightRange', newValue)}\n                valueLabelDisplay=\"auto\"\n                min={40}\n                max={120}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography gutterBottom>性別（可複選）:</Typography>\n            <FormGroup row>\n              {['male', 'female', 'transgender_male', 'transgender_female'].map((gender) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={filters.genders.includes(gender)}\n                      onChange={(e) => handleCheckboxChange('genders', gender, e.target.checked)}\n                      name={gender}\n                    />\n                  }\n                  label={gender === 'male' ? '男性' : gender === 'female' ? '女性' : gender === 'transgender_male' ? '跨性別男性' : '跨性別女性'}\n                  key={gender}\n                />\n              ))}\n            </FormGroup>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box mb={2}>\n              <Typography gutterBottom>年齡範圍</Typography>\n              <StyledSlider\n                value={filters.ageRange}\n                onChange={(e, newValue) => handleChange('ageRange', newValue)}\n                valueLabelDisplay=\"auto\"\n                min={18}\n                max={80}\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom>最低年收入 (美元): ${filters.minIncome}</Typography>\n            <TextField\n              label=\"最低年收入\"\n              type=\"number\"\n              value={filters.minIncome}\n              onChange={(e) => handleChange('minIncome', Math.max(0, parseInt(e.target.value, 10)))}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography gutterBottom>選擇教育程度:</Typography>\n            <TextField\n              select\n              value={filters.education}\n              onChange={(e) => handleChange('education', e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n            >\n              <MenuItem value=\"\">選擇教育程度</MenuItem>\n              <MenuItem value=\"highschool\">高中及以上</MenuItem>\n              <MenuItem value=\"university\">大學及以上</MenuItem>\n              <MenuItem value=\"postgraduate\">研究所及以上</MenuItem>\n            </TextField>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography gutterBottom>種族（可複選）:</Typography>\n            <FormGroup row>\n              {['east_asian', 'south_asian', 'southeast_asian', 'central_asian', 'white', 'black', 'hispanic', 'middle_eastern'].map((ethnicity) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={filters.ethnicities.includes(ethnicity)}\n                      onChange={(e) => handleCheckboxChange('ethnicities', ethnicity, e.target.checked)}\n                      name={ethnicity}\n                    />\n                  }\n                  label={\n                    ethnicity === 'east_asian' ? '東亞人' :\n                    ethnicity === 'south_asian' ? '南亞人' :\n                    ethnicity === 'southeast_asian' ? '東南亞人' :\n                    ethnicity === 'central_asian' ? '中亞人' :\n                    ethnicity === 'white' ? '白人' :\n                    ethnicity === 'black' ? '黑人' :\n                    ethnicity === 'hispanic' ? '拉丁美洲裔' : '中東和北非裔'\n                  }\n                  key={ethnicity}\n                />\n              ))}\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions style={{justifyContent: 'center', marginTop: '20px'}}>\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={calculateProbability}>計算機率</Button>\n      </CardActions>\n      {result !== null && (\n        <CardContent>\n          <Box textAlign=\"center\" mt={2}>\n            <Typography variant=\"h5\" gutterBottom>分析結果</Typography>\n            <Typography variant=\"h6\">你的理想對象在人口中的比例約為: {result}%</Typography>\n            <Typography variant=\"h6\">你的擇偶條件PR值: {prScore}</Typography>\n            <Typography variant=\"body1\" style={{marginTop: '10px'}}>\n              {prScore < 20\n                ? \"你的條件非常嚴格，找到完全符合條件的對象可能會很有挑戰性。考慮適當放寬一些要求可能會有幫助。\"\n                : prScore < 40\n                ? \"你的條件相對嚴格，可能需要多花些時間尋找理想對象。\"\n                : prScore < 60\n                ? \"你的條件適中，找到理想對象的難度適中。\"\n                : prScore < 80\n                ? \"你的條件相對寬鬆，有很多潛在的理想對象。\"\n                : \"你的條件非常寬鬆，應該很容易找到合適的對象。\"}\n            </Typography>\n          </Box>\n        </CardContent>\n      )}\n    </StyledCard>\n  );\n};\n\nexport default DatingFilter;","import React from 'react';\nimport DatingFilter from './DatingFilter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DatingFilter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}