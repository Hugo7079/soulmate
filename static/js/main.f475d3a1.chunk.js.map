{"version":3,"sources":["DatingFilter.js","App.js","reportWebVitals.js","index.js"],"names":["normalCDF","x","mean","stdDev","Math","exp","pow","DatingFilter","filters","setFilters","useState","heightRange","weightRange","genders","ageRange","minIncome","education","ethnicities","result","setResult","prScore","setPrScore","totalUsers","setTotalUsers","sumProbabilities","setSumProbabilities","sumSquaredProbabilities","setSumSquaredProbabilities","handleChange","name","value","prev","handleCheckboxChange","checked","filter","item","_jsxs","Card","style","maxWidth","margin","padding","children","_jsx","CardHeader","title","CardContent","Typography","gutterBottom","Slider","onChange","e","newValue","valueLabelDisplay","min","max","FormGroup","map","gender","FormControlLabel","control","Checkbox","includes","target","label","TextField","type","parseInt","variant","select","fullWidth","MenuItem","ethnicity","CardActions","Button","color","onClick","calculateProbability","probability","genderProb","reduce","acc","log","ethnicityProb","newTotalUsers","newSumProbabilities","newSumSquaredProbabilities","variance","prValue","sqrt","toFixed","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0TAIA,MAAMA,EAAYA,CAACC,EAAGC,EAAMC,KAClB,EAAIC,KAAKC,KAAK,GAAMD,KAAKE,KAAKL,EAAIC,GAAQC,EAAQ,KAAO,EAoPpDI,MAjPMA,KACnB,MAAOC,EAASC,GAAcC,mBAAS,CACrCC,YAAa,CAAC,IAAK,KACnBC,YAAa,CAAC,GAAI,IAClBC,QAAS,GACTC,SAAU,CAAC,GAAI,IACfC,UAAW,IACXC,UAAW,GACXC,YAAa,MAERC,EAAQC,GAAaT,mBAAS,OAC9BU,EAASC,GAAcX,mBAAS,OAEhCY,EAAYC,GAAiBb,mBAAS,IACtCc,EAAkBC,GAAuBf,mBAAS,IAClDgB,EAAyBC,GAA8BjB,mBAAS,GAEjEkB,EAAeA,CAACC,EAAMC,KAC1BrB,GAAWsB,IAAI,IAAUA,EAAM,CAACF,GAAOC,KAAS,EAG5CE,EAAuBA,CAACH,EAAMC,EAAOG,KACzCxB,GAAWsB,IAAI,IACVA,EACH,CAACF,GAAOI,EACJ,IAAIF,EAAKF,GAAOC,GAChBC,EAAKF,GAAMK,QAAOC,GAAQA,IAASL,OACtC,EAoFL,OACEM,eAACC,IAAI,CAACC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,OAAQC,QAAS,QAASC,SAAA,CAC9DC,cAACC,IAAU,CAACC,MAAM,+CAClBT,eAACU,IAAW,CAAAJ,SAAA,CACVN,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,kCACzBC,cAACM,IAAM,CACLnB,MAAOtB,EAAQG,YACfuC,SAAUA,CAACC,EAAGC,IAAaxB,EAAa,cAAewB,GACvDC,kBAAkB,OAClBC,IAAK,IACLC,IAAK,SAGTnB,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,kCACzBC,cAACM,IAAM,CACLnB,MAAOtB,EAAQI,YACfsC,SAAUA,CAACC,EAAGC,IAAaxB,EAAa,cAAewB,GACvDC,kBAAkB,OAClBC,IAAK,GACLC,IAAK,SAGTnB,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,gDACzBC,cAACa,IAAS,CAAAd,SACP,CAAC,OAAQ,SAAU,mBAAoB,sBAAsBe,KAAKC,GACjEf,cAACgB,IAAgB,CACfC,QACEjB,cAACkB,IAAQ,CACP5B,QAASzB,EAAQK,QAAQiD,SAASJ,GAClCR,SAAWC,GAAMnB,EAAqB,UAAW0B,EAAQP,EAAEY,OAAO9B,SAClEJ,KAAM6B,IAGVM,MAAkB,SAAXN,EAAoB,eAAkB,WAAXA,EAAsB,eAAkB,qBAAXA,EAAgC,iCAAU,kCACpGA,UAKbtB,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,6BACzBC,cAACM,IAAM,CACLnB,MAAOtB,EAAQM,SACfoC,SAAUA,CAACC,EAAGC,IAAaxB,EAAa,WAAYwB,GACpDC,kBAAkB,OAClBC,IAAK,GACLC,IAAK,QAGTnB,eAAA,OAAAM,SAAA,CACEN,eAACW,IAAU,CAACC,cAAY,EAAAN,SAAA,CAAC,mDAAclC,EAAQO,aAC/C4B,cAACsB,IAAS,CACRD,MAAM,iCACNE,KAAK,SACLpC,MAAOtB,EAAQO,UACfmC,SAAWC,GAAMvB,EAAa,YAAauC,SAAShB,EAAEY,OAAOjC,MAAO,KACpEsC,QAAQ,WACR5B,OAAO,cAGXJ,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,0CACzBN,eAAC6B,IAAS,CACRI,QAAM,EACNvC,MAAOtB,EAAQQ,UACfkC,SAAWC,GAAMvB,EAAa,YAAauB,EAAEY,OAAOjC,OACpDwC,WAAS,EACTF,QAAQ,WACR5B,OAAO,SAAQE,SAAA,CAEfC,cAAC4B,IAAQ,CAACzC,MAAM,GAAEY,SAAC,yCACnBC,cAAC4B,IAAQ,CAACzC,MAAM,aAAYY,SAAC,mCAC7BC,cAAC4B,IAAQ,CAACzC,MAAM,aAAYY,SAAC,mCAC7BC,cAAC4B,IAAQ,CAACzC,MAAM,eAAcY,SAAC,+CAGnCN,eAAA,OAAAM,SAAA,CACEC,cAACI,IAAU,CAACC,cAAY,EAAAN,SAAC,gDACzBC,cAACa,IAAS,CAAAd,SACP,CAAC,aAAc,cAAe,kBAAmB,gBAAiB,QAAS,QAAS,WAAY,kBAAkBe,KAAKe,GACtH7B,cAACgB,IAAgB,CACfC,QACEjB,cAACkB,IAAQ,CACP5B,QAASzB,EAAQS,YAAY6C,SAASU,GACtCtB,SAAWC,GAAMnB,EAAqB,cAAewC,EAAWrB,EAAEY,OAAO9B,SACzEJ,KAAM2C,IAGVR,MACgB,eAAdQ,EAA6B,qBACf,gBAAdA,EAA8B,qBAChB,oBAAdA,EAAkC,2BACpB,kBAAdA,EAAgC,qBAClB,UAAdA,EAAwB,eACV,UAAdA,EAAwB,eACV,aAAdA,EAA2B,iCAAU,wCAElCA,aAMf7B,cAAC8B,IAAW,CAAA/B,SACVC,cAAC+B,IAAM,CAACN,QAAQ,YAAYO,MAAM,UAAUC,QA5LrBC,KAC3B,IAAIC,EAAc,EAMlBA,GADmB9E,EAAUQ,EAAQG,YAAY,GAF9B,IACE,IAC4DX,EAAUQ,EAAQG,YAAY,GAF5F,IACE,IAQrBmE,GADmB9E,EAAUQ,EAAQI,YAAY,GAF9B,GACE,IAC4DZ,EAAUQ,EAAQI,YAAY,GAF5F,GACE,IAKrB,MAAMmE,EAAavE,EAAQK,QAAQmE,QAAO,CAACC,EAAKvB,IAOvCuB,EANqB,CAC1B,KAAQ,KACR,OAAU,KACV,iBAAoB,KACpB,mBAAsB,MAESvB,IAChC,GACHoB,GAAe1E,KAAKkD,IAAI,EAAGyB,GAG3B,MAAMjE,EAAWN,EAAQM,SAAS,GAAKN,EAAQM,SAAS,GAExDgE,GADgB1E,KAAKkD,IAAI,EAAGxC,EAAW,IAKvCgE,GADmB1E,KAAKmD,IAAI,EAAG,GAAKnD,KAAK8E,IAAI1E,EAAQO,WAAaX,KAAK8E,IAAI,OAAW9E,KAAK8E,IAAI,KAAW9E,KAAK8E,IAAI,OAUnHJ,GADgBtE,EAAQQ,UALF,CACpB,WAAc,GACd,WAAc,IACd,aAAgB,KAEgCR,EAAQQ,WAAa,EAIvE,MAAMmE,EAAgB3E,EAAQS,YAAY+D,QAAO,CAACC,EAAKT,IAW9CS,EAVwB,CAC7B,WAAc,IACd,YAAe,IACf,gBAAmB,IACnB,cAAiB,IACjB,MAAS,IACT,MAAS,IACT,SAAY,IACZ,eAAkB,KAEgBT,IACnC,GACHM,GAAe1E,KAAKkD,IAAI,EAAG6B,GAG3B,MAAMC,EAAgB9D,EAAa,EAC7B+D,EAAsB7D,EAAmBsD,EACzCQ,EAA6B5D,EAA0BoD,EAAcA,EAE3EvD,EAAc6D,GACd3D,EAAoB4D,GACpB1D,EAA2B2D,GAG3B,MAAMpF,EAAOmF,EAAsBD,EAC7BG,EAAYD,EAA6BF,EAAkBlF,EAAOA,EAIlEsF,GAAYV,EAAc5E,GAHjBE,KAAKqF,KAAKF,GAGyB,IAClDpE,GAAyB,IAAd2D,GAAmBY,QAAQ,IACtCrE,EAAWmE,EAAQE,QAAQ,GAAG,EA8GgDhD,SAAC,+BAEjE,OAAXxB,GACCkB,eAACU,IAAW,CAAAJ,SAAA,CACVN,eAACW,IAAU,CAACqB,QAAQ,KAAI1B,SAAA,CAAC,+FAAkBxB,EAAO,OAClDkB,eAACW,IAAU,CAACqB,QAAQ,KAAI1B,SAAA,CAAC,iDAAYtB,KACrCuB,cAACI,IAAU,CAAAL,SACRtB,EAAU,GACP,uRACAA,EAAU,GACV,yJACAA,EAAU,GACV,qHACAA,EAAU,GACV,2HACA,8IAIL,EC1OIuE,MARf,WACE,OACEhD,cAAA,OAAKiD,UAAU,MAAKlD,SAClBC,cAACpC,EAAY,KAGnB,ECGesF,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EAAY,GAExB,ECHFS,IAASC,OACP7D,cAAC8D,IAAMC,WAAU,CAAAhE,SACfC,cAACgD,EAAG,MAENgB,SAASC,eAAe,SAG1Bf,G","file":"static/js/main.f475d3a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardContent, CardActions, Typography, Button, Checkbox, FormControlLabel, FormGroup, TextField, MenuItem, Slider } from '@mui/material';\n\n// 常態分佈的累積分佈函數 (CDF)\nconst normalCDF = (x, mean, stdDev) => {\n  return (1 - Math.exp(-0.5 * Math.pow((x - mean) / stdDev, 2))) / 2;\n};\n\nconst DatingFilter = () => {\n  const [filters, setFilters] = useState({\n    heightRange: [160, 180],\n    weightRange: [50, 70],\n    genders: [],\n    ageRange: [25, 35],\n    minIncome: 50000,\n    education: '',\n    ethnicities: [],\n  });\n  const [result, setResult] = useState(null);\n  const [prScore, setPrScore] = useState(null);\n\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [sumProbabilities, setSumProbabilities] = useState(0);\n  const [sumSquaredProbabilities, setSumSquaredProbabilities] = useState(0);\n\n  const handleChange = (name, value) => {\n    setFilters(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCheckboxChange = (name, value, checked) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: checked \n        ? [...prev[name], value]\n        : prev[name].filter(item => item !== value)\n    }));\n  };\n\n  const calculateProbability = () => {\n    let probability = 1;\n\n    // 計算身高範圍概率\n    const heightMean = 170;\n    const heightStdDev = 10;\n    const heightProb = normalCDF(filters.heightRange[1], heightMean, heightStdDev) - normalCDF(filters.heightRange[0], heightMean, heightStdDev);\n    probability *= heightProb;\n\n    // 計算體重範圍概率\n    const weightMean = 70;\n    const weightStdDev = 15;\n    const weightProb = normalCDF(filters.weightRange[1], weightMean, weightStdDev) - normalCDF(filters.weightRange[0], weightMean, weightStdDev);\n    probability *= weightProb;\n\n    // 計算性別概率\n    const genderProb = filters.genders.reduce((acc, gender) => {\n      const genderProbabilities = {\n        'male': 0.488,\n        'female': 0.488,\n        'transgender_male': 0.012,\n        'transgender_female': 0.012\n      };\n      return acc + genderProbabilities[gender];\n    }, 0);\n    probability *= Math.min(1, genderProb);\n\n    // 計算年齡範圍概率\n    const ageRange = filters.ageRange[1] - filters.ageRange[0];\n    const ageProb = Math.min(1, ageRange / 62);\n    probability *= ageProb;\n\n    // 計算收入概率\n    const incomeProb = Math.max(0, 1 - (Math.log(filters.minIncome) - Math.log(30000)) / (Math.log(1000000) - Math.log(30000)));\n    probability *= incomeProb;\n\n    // 計算教育程度概率\n    const educationProb = {\n      'highschool': 0.6,\n      'university': 0.25,\n      'postgraduate': 0.05\n    };\n    const eduProb = filters.education ? educationProb[filters.education] : 1;\n    probability *= eduProb;\n\n    // 計算種族概率\n    const ethnicityProb = filters.ethnicities.reduce((acc, ethnicity) => {\n      const ethnicityProbabilities = {\n        'east_asian': 0.21,\n        'south_asian': 0.24,\n        'southeast_asian': 0.08,\n        'central_asian': 0.01,\n        'white': 0.15,\n        'black': 0.15,\n        'hispanic': 0.09,\n        'middle_eastern': 0.07\n      };\n      return acc + ethnicityProbabilities[ethnicity];\n    }, 0);\n    probability *= Math.min(1, ethnicityProb);\n\n    // 更新統計數據\n    const newTotalUsers = totalUsers + 1;\n    const newSumProbabilities = sumProbabilities + probability;\n    const newSumSquaredProbabilities = sumSquaredProbabilities + probability * probability;\n\n    setTotalUsers(newTotalUsers);\n    setSumProbabilities(newSumProbabilities);\n    setSumSquaredProbabilities(newSumSquaredProbabilities);\n\n    // 計算平均值和標準差\n    const mean = newSumProbabilities / newTotalUsers;\n    const variance = (newSumSquaredProbabilities / newTotalUsers) - (mean * mean);\n    const stdDev = Math.sqrt(variance);\n\n    // 計算PR值\n    const prValue = ((probability - mean) / stdDev) * 100;\n    setResult((probability * 100).toFixed(2));\n    setPrScore(prValue.toFixed(2));\n  };\n\n  return (\n    <Card style={{ maxWidth: 600, margin: 'auto', padding: '20px' }}>\n      <CardHeader title=\"交往配對篩選器\" />\n      <CardContent>\n        <div>\n          <Typography gutterBottom>身高範圍 (cm)</Typography>\n          <Slider\n            value={filters.heightRange}\n            onChange={(e, newValue) => handleChange('heightRange', newValue)}\n            valueLabelDisplay=\"auto\"\n            min={140}\n            max={200}\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>體重範圍 (kg)</Typography>\n          <Slider\n            value={filters.weightRange}\n            onChange={(e, newValue) => handleChange('weightRange', newValue)}\n            valueLabelDisplay=\"auto\"\n            min={40}\n            max={120}\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>性別（可複選）:</Typography>\n          <FormGroup>\n            {['male', 'female', 'transgender_male', 'transgender_female'].map((gender) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.genders.includes(gender)}\n                    onChange={(e) => handleCheckboxChange('genders', gender, e.target.checked)}\n                    name={gender}\n                  />\n                }\n                label={gender === 'male' ? '男性' : gender === 'female' ? '女性' : gender === 'transgender_male' ? '跨性別男性' : '跨性別女性'}\n                key={gender}\n              />\n            ))}\n          </FormGroup>\n        </div>\n        <div>\n          <Typography gutterBottom>年齡範圍</Typography>\n          <Slider\n            value={filters.ageRange}\n            onChange={(e, newValue) => handleChange('ageRange', newValue)}\n            valueLabelDisplay=\"auto\"\n            min={18}\n            max={80}\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>最低年收入 (美元): ${filters.minIncome}</Typography>\n          <TextField\n            label=\"最低年收入\"\n            type=\"number\"\n            value={filters.minIncome}\n            onChange={(e) => handleChange('minIncome', parseInt(e.target.value, 10))}\n            variant=\"outlined\"\n            margin=\"normal\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom>選擇教育程度:</Typography>\n          <TextField\n            select\n            value={filters.education}\n            onChange={(e) => handleChange('education', e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n          >\n            <MenuItem value=\"\">選擇教育程度</MenuItem>\n            <MenuItem value=\"highschool\">高中及以上</MenuItem>\n            <MenuItem value=\"university\">大學及以上</MenuItem>\n            <MenuItem value=\"postgraduate\">研究所及以上</MenuItem>\n          </TextField>\n        </div>\n        <div>\n          <Typography gutterBottom>種族（可複選）:</Typography>\n          <FormGroup>\n            {['east_asian', 'south_asian', 'southeast_asian', 'central_asian', 'white', 'black', 'hispanic', 'middle_eastern'].map((ethnicity) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filters.ethnicities.includes(ethnicity)}\n                    onChange={(e) => handleCheckboxChange('ethnicities', ethnicity, e.target.checked)}\n                    name={ethnicity}\n                  />\n                }\n                label={\n                  ethnicity === 'east_asian' ? '東亞人' :\n                  ethnicity === 'south_asian' ? '南亞人' :\n                  ethnicity === 'southeast_asian' ? '東南亞人' :\n                  ethnicity === 'central_asian' ? '中亞人' :\n                  ethnicity === 'white' ? '白人' :\n                  ethnicity === 'black' ? '黑人' :\n                  ethnicity === 'hispanic' ? '拉丁美洲裔' : '中東和北非裔'\n                }\n                key={ethnicity}\n              />\n            ))}\n          </FormGroup>\n        </div>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" color=\"primary\" onClick={calculateProbability}>計算機率</Button>\n      </CardActions>\n      {result !== null && (\n        <CardContent>\n          <Typography variant=\"h6\">你的理想對象在人口中的比例約為: {result}%</Typography>\n          <Typography variant=\"h6\">你的擇偶條件PR值: {prScore}</Typography>\n          <Typography>\n            {prScore < 20\n              ? \"你的條件非常嚴格，找到完全符合條件的對象可能會很有挑戰性。考慮適當放寬一些要求可能會有幫助。\"\n              : prScore < 40\n              ? \"你的條件相對嚴格，可能需要多花些時間尋找理想對象。\"\n              : prScore < 60\n              ? \"你的條件適中，找到理想對象的難度適中。\"\n              : prScore < 80\n              ? \"你的條件相對寬鬆，有很多潛在的理想對象。\"\n              : \"你的條件非常寬鬆，應該很容易找到合適的對象。\"}\n          </Typography>\n        </CardContent>\n      )}\n    </Card>\n  );\n};\n\nexport default DatingFilter;","import React from 'react';\nimport DatingFilter from './DatingFilter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DatingFilter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}